<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Azure on Kubermates</title><link>https://kubermates.org/tags/azure/</link><description>Recent content in Azure on Kubermates</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 26 Feb 2025 14:44:59 +0000</lastBuildDate><atom:link href="https://kubermates.org/tags/azure/index.xml" rel="self" type="application/rss+xml"/><item><title>🔐 Secure Secret Management with SOPS in Terraform &amp; Terragrunt</title><link>https://kubermates.org/blog/secure-secret-management-with-sops-in-terraform-terragrunt-231a/</link><pubDate>Wed, 26 Feb 2025 14:44:59 +0000</pubDate><guid>https://kubermates.org/blog/secure-secret-management-with-sops-in-terraform-terragrunt-231a/</guid><description>&lt;p>When managing infrastructure as code (IaC), keeping secrets &lt;strong>safe&lt;/strong> while still making them accessible to Terraform/Terragrunt is a challenge. Storing secrets in plaintext is a &lt;strong>security risk&lt;/strong> 🚨—and that’s where &lt;strong>SOPS&lt;/strong> (Secrets OPerationS) comes in!&lt;/p>
&lt;p>In this guide, we’ll cover:&lt;/p>
&lt;ul>
&lt;li>✅ How to use &lt;strong>SOPS&lt;/strong> with &lt;strong>age&lt;/strong> and &lt;strong>GPG&lt;/strong>&lt;/li>
&lt;li>✅ How to configure &lt;strong>SOPS with &lt;code>sops.yaml&lt;/code>&lt;/strong> for better management&lt;/li>
&lt;li>✅ How to use &lt;strong>Terragrunt’s built-in SOPS decryption&lt;/strong> (without &lt;code>run_cmd&lt;/code>)&lt;/li>
&lt;li>✅ A &lt;strong>GitHub Actions workflow&lt;/strong> to securely use secrets in CI/CD&lt;/li>
&lt;/ul>
&lt;h2 id="-why-use-sops">📌 Why Use SOPS?&lt;/h2>
&lt;p>SOPS is an open-source tool from Mozilla that lets you &lt;strong>encrypt and decrypt&lt;/strong> secrets easily. It supports multiple encryption methods, including &lt;strong>GPG&lt;/strong>, &lt;strong>AWS KMS&lt;/strong>, &lt;strong>Azure Key Vault&lt;/strong>, &lt;strong>Google Cloud KMS&lt;/strong>, and &lt;strong>age&lt;/strong>.&lt;/p></description></item><item><title>Capsule: How to Use It and First Steps to Set It Up on an AKS Cluster 🚀</title><link>https://kubermates.org/blog/capsule-how-to-use-it-and-first-steps-to-set-it-up-on-an-aks-cluster-5hl5/</link><pubDate>Tue, 24 Sep 2024 19:24:03 +0000</pubDate><guid>https://kubermates.org/blog/capsule-how-to-use-it-and-first-steps-to-set-it-up-on-an-aks-cluster-5hl5/</guid><description>&lt;p>Capsule is an awesome, open-source solution that helps you manage multiple tenants in Kubernetes clusters, making it super easy to handle multi-tenancy. Whether you’re running Kubernetes for a big company or providing services for others, Capsule ensures your clusters stay organized and secure!&lt;/p>
&lt;p>In this guide, we’ll dive into what Capsule is, why it’s a great choice, and show you how to set it up on an Azure Kubernetes Service (AKS) cluster. Ready? Let’s go! 🎉&lt;/p></description></item><item><title>Understanding AKS NAP: Azure Kubernetes Service Node Auto-Provisioning (Powered by Karpenter) 🚀</title><link>https://kubermates.org/blog/understanding-aks-nap-azure-kubernetes-service-node-auto-provisioning-powered-by-karpenter-3djh/</link><pubDate>Fri, 20 Sep 2024 06:50:50 +0000</pubDate><guid>https://kubermates.org/blog/understanding-aks-nap-azure-kubernetes-service-node-auto-provisioning-powered-by-karpenter-3djh/</guid><description>&lt;p>As more organizations embrace cloud-native technologies like &lt;strong>Kubernetes&lt;/strong>, keeping your infrastructure lean and scalable is key to success. Thankfully, Azure Kubernetes Service (AKS) offers a powerful feature—&lt;strong>Node Auto-Provisioning (NAP)&lt;/strong>. NAP is powered by &lt;strong>Karpenter&lt;/strong>, a Kubernetes-native tool, and allows automatic node provisioning based on demand, ensuring that your cluster’s resources are always just right. In this article, we’ll explore how AKS NAP works, how it&amp;rsquo;s powered by &lt;strong>Karpenter&lt;/strong>, and why it can make your life a lot easier! 🌟&lt;/p></description></item><item><title>Admission Controllers in Kubernetes: OPA GateKeeper, Kyverno, and Azure Policy Add-on for AKS—Which One Wins? 🏆</title><link>https://kubermates.org/blog/admission-controllers-in-kubernetes-opa-gatekeeper-kyverno-and-azure-policy-add-on-for-aks-which-one-wins-237d/</link><pubDate>Tue, 17 Sep 2024 07:25:52 +0000</pubDate><guid>https://kubermates.org/blog/admission-controllers-in-kubernetes-opa-gatekeeper-kyverno-and-azure-policy-add-on-for-aks-which-one-wins-237d/</guid><description>&lt;p>When managing a Kubernetes cluster, controlling what gets deployed and ensuring resources comply with security, governance, and operational policies is essential. Admission controllers act as &amp;ldquo;gatekeepers&amp;rdquo; for your cluster, ensuring only compliant resources get through. 🛡️&lt;/p>
&lt;p>Three popular options for extending Kubernetes&amp;rsquo; admission control functionality are &lt;strong>OPA GateKeeper&lt;/strong>, &lt;strong>Kyverno&lt;/strong>, and the &lt;strong>Azure Policy Add-on for AKS&lt;/strong> (which incorporates OPA GateKeeper&amp;rsquo;s engine). In this article, we’ll compare these solutions and show why &lt;strong>Kyverno&lt;/strong> is still the most user-friendly and versatile option for Kubernetes users. 🌊&lt;/p></description></item><item><title>Upgrading AKS: In-Place, Blue-Green, and Canary Upgrades Explained 🚀</title><link>https://kubermates.org/blog/upgrading-aks-in-place-blue-green-and-canary-upgrades-explained-3aap/</link><pubDate>Sun, 15 Sep 2024 10:09:30 +0000</pubDate><guid>https://kubermates.org/blog/upgrading-aks-in-place-blue-green-and-canary-upgrades-explained-3aap/</guid><description>&lt;p>Keeping your Azure Kubernetes Service (AKS) cluster up to date is crucial for security, performance, and accessing new features. AKS offers different strategies for upgrading, and in this guide, we’ll walk through the main methods: &lt;strong>In-place upgrades&lt;/strong>, &lt;strong>Blue-Green deployments&lt;/strong>, and &lt;strong>Canary upgrades&lt;/strong>, complete with real-world examples to help you understand the process!&lt;/p>
&lt;h2 id="types-of-aks-upgrades-">Types of AKS Upgrades 🚧&lt;/h2>
&lt;h3 id="1-in-place-upgrades-">1. &lt;strong>In-Place Upgrades&lt;/strong> 🔄&lt;/h3>
&lt;p>An &lt;strong>In-place upgrade&lt;/strong> is the most straightforward method, where the upgrade happens directly on your current AKS cluster. It updates the control plane and worker nodes without creating new resources.&lt;/p></description></item><item><title>Monitor and Optimize Multi-Cluster AKS Costs 💰</title><link>https://kubermates.org/blog/monitor-and-optimize-multi-cluster-aks-costs-4627/</link><pubDate>Thu, 12 Sep 2024 07:42:06 +0000</pubDate><guid>https://kubermates.org/blog/monitor-and-optimize-multi-cluster-aks-costs-4627/</guid><description>&lt;p>As businesses scale their Kubernetes workloads across multiple Azure Kubernetes Service (AKS) clusters, managing and optimizing cloud costs becomes critical. Deploying and managing observability tools such as KubeCost and OpenTelemetry (OTel) across multiple clusters can be simplified using &lt;a href="https://github.com/Azure/fleet/blob/main/docs/concepts/README.md">AKS Fleet Manager&lt;/a>, Microsoft Managed Prometheus, and Grafana.&lt;/p>
&lt;p>This guide will explain how to:&lt;/p>
&lt;ol>
&lt;li>Deploy &lt;strong>KubeCost&lt;/strong> and &lt;strong>OpenTelemetry&lt;/strong> across multiple AKS clusters using &lt;strong>AKS Fleet Manager&lt;/strong>.&lt;/li>
&lt;li>Expose metrics through OpenTelemetry.&lt;/li>
&lt;li>Centralize monitoring via &lt;strong>Managed Prometheus&lt;/strong> and &lt;strong>Grafana&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;p>You’ll gain a single-pane-of-glass view into your multi-cluster environment, enabling more efficient resource utilization and cost management.&lt;/p></description></item><item><title>🚀 Enhancing Container Security: The Complete Guide to Secure and Clean Kubernetes Clusters 🛡️🧼</title><link>https://kubermates.org/blog/enhancing-container-security-the-complete-guide-to-secure-and-clean-kubernetes-clusters-1ida/</link><pubDate>Wed, 11 Sep 2024 07:19:50 +0000</pubDate><guid>https://kubermates.org/blog/enhancing-container-security-the-complete-guide-to-secure-and-clean-kubernetes-clusters-1ida/</guid><description>&lt;p>As Kubernetes continues to grow in popularity, ensuring the security and cleanliness of your container images is crucial. In this guide, we’ll cover two key strategies: &lt;strong>image signing using Notary&lt;/strong> 🖋️ and the &lt;strong>AKS Image Cleaner (Eraser)&lt;/strong> add-on 🧼. Together, they form a robust, secure, and efficient container management workflow.&lt;/p>
&lt;p>By the end, you&amp;rsquo;ll know how to ensure that your AKS cluster pulls only verified, trusted images and stays free of unused images that could pose a risk to your environment.&lt;/p></description></item><item><title>Understanding eBPF and Its Application in Modern Cloud Environments 🚀</title><link>https://kubermates.org/blog/understanding-ebpf-and-its-application-in-modern-cloud-environments-3f99/</link><pubDate>Sun, 08 Sep 2024 06:53:32 +0000</pubDate><guid>https://kubermates.org/blog/understanding-ebpf-and-its-application-in-modern-cloud-environments-3f99/</guid><description>&lt;h2 id="what-is-ebpf-">What is eBPF? 🤔&lt;/h2>
&lt;p>&lt;strong>eBPF&lt;/strong> (Extended Berkeley Packet Filter) is like magic for the Linux kernel! 🪄 It lets developers run custom code directly within the kernel, safely and efficiently, without needing to modify the kernel&amp;rsquo;s source code or load new modules. Originally, eBPF was created to help with network packet filtering, but it has evolved into a Swiss Army knife 🛠️ for all sorts of tasks, from observability to security and system performance monitoring.&lt;/p></description></item><item><title>🌐 Securing Kubernetes Secrets in AKS: Using Azure Key Vault with Managed and User Assigned Identities 🚀</title><link>https://kubermates.org/blog/securing-kubernetes-secrets-in-aks-using-azure-key-vault-with-managed-and-user-assigned-identities-569k/</link><pubDate>Wed, 04 Sep 2024 11:35:22 +0000</pubDate><guid>https://kubermates.org/blog/securing-kubernetes-secrets-in-aks-using-azure-key-vault-with-managed-and-user-assigned-identities-569k/</guid><description>&lt;p>Hello Kubernetes enthusiast! 👋 Let’s dive into a critical aspect of securing your applications running in Azure Kubernetes Service (AKS): managing secrets. While Kubernetes Secrets provide a way to manage sensitive information like passwords and API keys, they aren’t encrypted by default and can be vulnerable if not handled correctly. In this guide, we&amp;rsquo;ll explore how to securely manage secrets by integrating Azure Key Vault with AKS using both &lt;strong>VM Managed Identities&lt;/strong> and &lt;strong>User Assigned Identities&lt;/strong>. Plus, we&amp;rsquo;ll show you how to enable the Secret Store CSI Driver directly in AKS.&lt;/p></description></item><item><title>🚀 Automating Image Vulnerability Patching in Kubernetes with Trivy Operator, Copacetic, and GitHub Actions</title><link>https://kubermates.org/blog/automating-image-vulnerability-patching-in-kubernetes-with-trivy-operator-copacetic-and-github-actions-13l/</link><pubDate>Tue, 03 Sep 2024 14:52:24 +0000</pubDate><guid>https://kubermates.org/blog/automating-image-vulnerability-patching-in-kubernetes-with-trivy-operator-copacetic-and-github-actions-13l/</guid><description>&lt;h1 id="-automating-image-vulnerability-patching-in-kubernetes-with-trivy-operator-copacetic-and-github-actions">🚀 Automating Image Vulnerability Patching in Kubernetes with Trivy Operator, Copacetic, and GitHub Actions&lt;/h1>
&lt;h2 id="1-installing-and-using-copacetic-copa-cli">1. Installing and Using Copacetic (Copa) CLI&lt;/h2>
&lt;p>Copacetic is a CLI tool (&lt;code>copa&lt;/code>) designed to help automate the patching of vulnerabilities in your container images. Here’s how to install it:&lt;/p>
&lt;h3 id="11-clone-the-copacetic-repository">1.1. Clone the Copacetic Repository&lt;/h3>
&lt;p>Start by cloning the Copacetic repository to your local machine:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>git clone https://github.com/project-copacetic/copacetic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>cd copacetic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="12-build-copacetic">1.2. Build Copacetic&lt;/h3>
&lt;p>Inside the cloned directory, build the Copacetic CLI:&lt;/p></description></item><item><title>🛡️ Effective Vulnerability Monitoring in Kubernetes</title><link>https://kubermates.org/blog/effective-vulnerability-monitoring-in-kubernetes-1mge/</link><pubDate>Mon, 26 Aug 2024 10:32:34 +0000</pubDate><guid>https://kubermates.org/blog/effective-vulnerability-monitoring-in-kubernetes-1mge/</guid><description>&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Hey there, Kubernetes explorer! 🌟 As your Kubernetes environment grows, keeping it secure becomes more challenging, especially when dealing with multiple clusters. Imagine managing several clusters (spokes) and needing a single source of truth for all your security metrics—sounds like a big task, right? 🤔 That&amp;rsquo;s where &lt;strong>Trivy&lt;/strong>, &lt;strong>Trivy Operator&lt;/strong>, &lt;strong>OpenTelemetry&lt;/strong>, &lt;strong>Prometheus&lt;/strong>, and &lt;strong>Grafana&lt;/strong> come to the rescue.&lt;/p>
&lt;p>In this guide, I’ll show you how to set up Trivy and Trivy Operator in a federated Kubernetes environment, collect vulnerability data using OpenTelemetry, and centralize it using either an in-cluster Prometheus setup or managed services like &lt;strong>Azure Monitor (for Prometheus)&lt;/strong> and &lt;strong>Grafana Cloud&lt;/strong> or &lt;strong>Azure Managed Grafana&lt;/strong>. By the end of this, you’ll have a system that monitors vulnerabilities across all your clusters from one place. Let’s dive in! 🏊‍♂️&lt;/p></description></item><item><title>🌐 Kubernetes DNS: How to Use In-Cluster and Azure Private DNS Together</title><link>https://kubermates.org/blog/kubernetes-dns-how-to-use-in-cluster-and-azure-private-dns-together-48h3/</link><pubDate>Sat, 17 Aug 2024 17:51:44 +0000</pubDate><guid>https://kubermates.org/blog/kubernetes-dns-how-to-use-in-cluster-and-azure-private-dns-together-48h3/</guid><description>&lt;p>Kubernetes is a powerful platform for managing containerized applications, providing robust tools for networking, service discovery, and DNS resolution. This guide will explore how Kubernetes handles DNS resolution within the cluster and how you can integrate it with Azure Private DNS to securely resolve external, private resources.&lt;/p>
&lt;h2 id="-understanding-kubernetes-services-and-dns-resolution">🔍 Understanding Kubernetes Services and DNS Resolution&lt;/h2>
&lt;p>Kubernetes Services provide a stable network identity for a set of Pods, allowing other components to communicate with them reliably. This is crucial since Pods in Kubernetes are ephemeral and their IP addresses can change over time.&lt;/p></description></item><item><title>How to Manage Kubernetes App Storage Like a Pro 📁</title><link>https://kubermates.org/blog/how-to-manage-kubernetes-app-storage-like-a-pro-o33/</link><pubDate>Fri, 16 Aug 2024 20:25:33 +0000</pubDate><guid>https://kubermates.org/blog/how-to-manage-kubernetes-app-storage-like-a-pro-o33/</guid><description>&lt;p>Managing storage in Kubernetes might seem a bit tricky at first, but don’t worry—we&amp;rsquo;re here to help! This guide will walk you through everything you need to know about Kubernetes volumes, how they work, and how to use them effectively, especially if you&amp;rsquo;re using Azure.&lt;/p>
&lt;h2 id="-what-are-kubernetes-volumes">📂 What Are Kubernetes Volumes?&lt;/h2>
&lt;p>Think of &lt;strong>volumes&lt;/strong> as a way to store data in your Kubernetes pods that doesn’t disappear when the pod shuts down. This is super important for things like saving files, databases, or anything else that needs to stick around.&lt;/p></description></item></channel></rss>