<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aws on Kubermates</title><link>https://kubermates.org/tags/aws/</link><description>Recent content in Aws on Kubermates</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 02 Sep 2024 11:41:41 +0000</lastBuildDate><atom:link href="https://kubermates.org/tags/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>Autoscaling in Kubernetes: KEDA, Karpenter, and Native Autoscalers</title><link>https://kubermates.org/blog/autoscaling-in-kubernetes-keda-karpenter-and-native-autoscalers-1gpo/</link><pubDate>Mon, 02 Sep 2024 11:41:41 +0000</pubDate><guid>https://kubermates.org/blog/autoscaling-in-kubernetes-keda-karpenter-and-native-autoscalers-1gpo/</guid><description>&lt;p>Autoscaling is a critical component of any robust Kubernetes environment, ensuring your applications and infrastructure can dynamically adjust to meet demand. In this guide, we&amp;rsquo;ll explore three powerful autoscaling tools: &lt;strong>KEDA&lt;/strong> for event-driven pod autoscaling, &lt;strong>Karpenter&lt;/strong> for dynamic node scaling, and Kubernetes&amp;rsquo; native autoscalers (HPA and VPA). We&amp;rsquo;ll dive into how to use them effectively, with plenty of examples to get you started. ðŸš€&lt;/p>
&lt;h2 id="introduction-to-keda-">Introduction to KEDA ðŸš€&lt;/h2>
&lt;p>KEDA (Kubernetes-based Event Driven Autoscaling) allows you to scale applications based on custom event metrics, not just CPU or memory usage. Itâ€™s ideal for scenarios where workloads are triggered by external events, such as message queues, databases, or HTTP requests. Whether you&amp;rsquo;re processing incoming orders, reacting to sensor data, or scaling based on custom Prometheus metrics, KEDA has you covered! ðŸ’¥&lt;/p></description></item></channel></rss>